version: "3.9"

services:
    nginx:
      container_name: nginx
      image: {{env.NGINX_IMAGE}}
      restart: always
      tty: true
      ports:
        - "80:80"
        - "443:443"
      volumes:
        - /etc/letsencrypt/live/traffic-racer.ru/fullchain.pem:/etc/nginx/ssl/fullchain.pem
        - /etc/letsencrypt/live/traffic-racer.ru/privkey.pem:/etc/nginx/ssl/privkey.pem  
      environment:
        SERVER_NAME: {{env.SERVER_NAME}}
      depends_on:
        - server
  
    server:
        container_name: server
        image: {{env.SERVER_IMAGE}}
        restart: always
        ports:
            - "{{env.SERVER_PORT}}:{{env.SERVER_PORT}}"
        environment:
          SERVER_PORT: {{env.SERVER_PORT}}
          POSTGRES_DB: {{env.POSTGRES_DB}}
          POSTGRES_PASSWORD: {{env.POSTGRES_PASSWORD}}
          POSTGRES_USER: {{env.POSTGRES_USER}}
          POSTGRES_PORT: {{env.POSTGRES_PORT}}
        depends_on:
            - postgres
        command:
          ./packages/server/utils/waitForDataBaseConnect/wait-for.sh postgres:{{env.POSTGRES_PORT}} -- node /app/packages/server/dist/index.js

    postgres:
      container_name: postgres
      image: cr.yandex/crpjtg1eocevrotq2577/traffic-racer/postgres:15022023
      ports:
        - "{{env.POSTGRES_PORT}}:{{env.POSTGRES_PORT}}"
      environment:
        POSTGRES_PASSWORD: {{env.POSTGRES_PASSWORD}}
        POSTGRES_USER: {{env.POSTGRES_USER}}
        POSTGRES_DB: {{env.POSTGRES_DB}}
      volumes:
        - /var/lib/postgresql/data/:/var/lib/postgresql/data

    mongo:
      image: mongo
      restart: always
      ports:
        - '${env.MONGO_PORT}:${env.MONGO_PORT}'
      environment:
        MONGO_INITDB_ROOT_USERNAME: ${env.MONGO_ROOT_USER}
        MONGO_INITDB_ROOT_PASSWORD: ${env.MONGO_ROOT_PASSWORD}
        MONGO_INITDB_DATABASE: ${env.MONGO_DB}
        MONGO_INITDB_USERNAME: ${env.MONGO_USER}
        MONGO_INITDB_PASSWORD: ${env.MONGO_PASSWORD}
    volumes:
      - /var/lib/mongo/data:/data/db
    networks:
      - mongo
