version: "3.9"

services:
    nginx:
      image: nginx
      container_name: nginx
      restart: always
      tty: true
      build:
        context: .
        dockerfile: ./docker/Dockerfile.nginx
      ports:
        - "80:80"
        - "443:443"
      environment:
        SERVER_NAME: ${SERVER_NAME}
      networks:
        - postgres
      env_file:
          ./.env
      depends_on:
        - server
  
    server:
        container_name: server
        image: server
        env_file:
          ./.env
        build:
            context: .
            dockerfile: ./docker/Dockerfile.server
            args:
              SERVER_PORT: ${SERVER_PORT}
        restart: always
        ports:
            - "${SERVER_PORT}:${SERVER_PORT}"
        environment:
          SERVER_PORT: ${SERVER_PORT}
        networks:
        - postgres
        depends_on:
            - postgres
        command:
          ./packages/server/utils/waitForDataBaseConnect/wait-for.sh postgres:${POSTGRES_PORT} -- node /app/packages/server/dist/index.js

    postgres:
      container_name: postgresDB
      image: postgres:14
      env_file:
        ./.env
      ports:
        - "${POSTGRES_PORT}:${POSTGRES_PORT}"
      environment:
        POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
        POSTGRES_USER: ${POSTGRES_USER}
        POSTGRES_DB: ${POSTGRES_DB}
      volumes:
        - ./tmp/pgdata:/var/lib/postgresql/data
      networks:
        - postgres

networks:
    postgres:
      name: postgres


