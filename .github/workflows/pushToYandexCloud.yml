name: Push To Yandex Cloud CR

# Controls when the action will run. 
on:
  push:
    branches:
      - TM09-105-deploy-to-yandex-cloud

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:

  build:

    runs-on: ubuntu-latest

    steps:

        - uses: actions/checkout@v3

        - name: 'Create env file'
          run: |
            echo "${{ secrets.ENV_FILE }}" > .env

        - name: Yandex Cloud CR "Login" Action for GitHub Actions
          uses: yc-actions/yc-cr-login@v1
          with:
            yc-sa-json-credentials: ${{ secrets.YC_SA_JSON_CREDENTIALS }}
        
        - name: Build and push
          env: 
            SERVER_NAME: ${{ secrets.SERVER_NAME }}
            SERVER_PORT: ${{ secrets.SERVER_PORT }}
            POSTGRES_PORT: ${{ secrets.POSTGRES_PORT }}
            POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
            POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
            POSTGRES_DB: ${{secrets.POSTGRES_DB }}
            NGINX_IMAGE: cr.yandex/${{secrets.CR_REGISTRY}}/traffic-racer/nginx:${{ github.sha }}
            SERVER_IMAGE: cr.yandex/${{secrets.CR_REGISTRY}}/traffic-racer/server:${{ github.sha }}
            POSTGRES_IMAGE: cr.yandex/${{secrets.CR_REGISTRY}}/traffic-racer/postgres:${{ github.sha }}
          run: |
            docker compose build
            docker tag nginx:latest ${{env.NGINX_IMAGE}}
            docker push ${{env.NGINX_IMAGE}}
            docker tag server:latest ${{env.SERVER_IMAGE}}
            docker push  ${{env.SERVER_IMAGE}}
            docker tag postgres:14:latest ${{env.POSTGRES_IMAGE}}
            docker push ${{env.POSTGRESS_IMAGE}}

  deploy:
    needs:
      - build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
        uses: actions/checkout@v3

      - name: 'Create env file'
        run: |
          echo "${{ secrets.ENV_FILE }}" > .env

      - name: Deploy COI VM
        id: deploy-coi
        uses: yc-actions/yc-coi-deploy@v1.0.1
        
        env:
          NGINX_IMAGE: ${{env.NGINX_IMAGE}}
          SERVER_IMAGE: ${{env.SERVER_IMAGE}}
          POSTGRES_IMAGE: ${{env.POSTGRESS_IMAGE}}
          SSH_KEY: ${{ secrets.SSH_KEY }}
          SERVER_NAME: ${{ secrets.SERVER_NAME }}
          SERVER_PORT: ${{ secrets.SERVER_PORT }}
          POSTGRES_PORT: ${{ secrets.POSTGRES_PORT }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
        with:
          yc-sa-json-credentials: ${{ secrets.YC_SA_JSON_CREDENTIALS }}
          folder-id: ${{ secrets.FOLDER_ID }}
          vm-name: ${{ secrets.VM_NAME}}
          vm-service-account-id: ${{ secrets.VM_SERVICE_ACCOUNT_ID }}
          vm-cores: 2
          vm-platform-id: 'standard-v2'
          vm-memory: 512Mb
          vm-disk-size: 30GB
          vm-subnet-id: ${{ secrets.VM_SUBNET_ID }}
          vm-core-fraction: 5
          vm-zone-id: ru-central1-b
          user-data-path: './yandexCloud/user-data.yaml'
          docker-compose-path: './yandexCloud/docker-compose.YC.yaml'
