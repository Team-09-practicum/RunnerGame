name: Push To Yandex Cloud CR

# Controls when the action will run. 
on:
  push:
    branches:
      - TM09-105-deploy-to-yandex-cloud

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:

  build:

    runs-on: ubuntu-latest

    steps:

        - uses: actions/checkout@v2

        - name: 'Create env file'
          run: |
            echo "${{ secrets.ENV_FILE }}" > .env

        - name: Yandex Cloud CR "Login" Action for GitHub Actions
          uses: yc-actions/yc-cr-login@v0.1-alpha
          with:
            yc-sa-json-credentials: ${{ secrets.YC_SA_JSON_CREDENTIALS }}
        
        - name: Build nginx
          run: |
            docker build -f Dockerfile.nginx -t cr.yandex/crpjtg1eocevrotq2577/traffic-racer:nginx${{ github.sha }} .
            docker push cr.yandex/crpjtg1eocevrotq2577/traffic-racer:nginx${{ github.sha }}

        - name: Build server
          run: |
            docker build -f Dockerfile.server -t cr.yandex/crpjtg1eocevrotq2577/traffic-racer:server${{ github.sha }} .
            docker push cr.yandex/crpjtg1eocevrotq2577/traffic-racer:server${{ github.sha }}
      
        - name: Build db
          run: |
            docker build -f Dockerfile.db -t cr.yandex/crpjtg1eocevrotq2577/traffic-racer:db${{ github.sha }} .
            docker push cr.yandex/crpjtg1eocevrotq2577/traffic-racer:db${{ github.sha }}

  deploy:
    needs:
      - build
    runs-on: ubuntu-latest
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - name: Deploy COI VM
        id: deploy-coi
        uses: yc-actions/yc-coi-deploy@v1
        
        env:
          NGINX_IMAGE: cr.yandex/crpjtg1eocevrotq2577/traffic-racer:nginx${{ github.sha }}
          SERVER_IMAGE: cr.yandex/crpjtg1eocevrotq2577/traffic-racer:server${{ github.sha }}
          DB_IMAGE: cr.yandex/crpjtg1eocevrotq2577/traffic-racer:db${{ github.sha }}
          SSH_KEY: ${{ secrets.SSH_KEY }}
        
        with:
          yc-sa-json-credentials: ${{ secrets.YC_SA_JSON_CREDENTIALS }}
          folder-id: ${{ secrets.FOLDER_ID }}
          vm-name: ${{ secrets.VM_NAME}}
          vm-service-account-id: ${{ secrets.VM_SERVICE_ACCOUNT_ID }}
          vm-cores: 2
          vm-memory: 2 GB
          vm-disk-size: 8GB
          vm-disk-type: SSD
          vm-subnet-id: ${{ secrets.VM_SUBNET_ID }}
          vm-zone-id: ru-central1-b
          vm-core-fraction: 20
          user-data-path: './user-data.yaml'
          docker-compose-path: './docker-compose.yaml'
